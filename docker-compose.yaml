volumes:
  prometheus-data: {}
  grafana-data: {}
  alertmanager-data: {}
  data: {}
  mysqldata: {}
  work: {}
services:
  bind9:
    image: bind9:latest
    container_name: bind9
    ports:
      - '53:53/udp'
      - '53:53/tcp'
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: 192.168.1.146
    volumes:
      - ./bind9/etc/bind/named.conf.local:/etc/bind/named.conf.local
      - ./bind9/etc/bind/named.conf.options:/etc/bind/named.conf.options
      - ./bind9/etc/bind/db.homelab.lan:/etc/bind/db.homelab.lan
      - ./bind9/etc/bind/db.192.168:/etc/bind/db.192.168
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - '8080:8080'
    restart: unless-stopped
    network_mode: host
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    restart: unless-stopped
    network_mode: host
    volumes:
      - grafana-data:/var/lib/grafana
  alertmanager:
    image: quay.io/prometheus/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager-data:/data
  socket_server:
    image: node:latest
    container_name: socket
    command: nodemon src/server.js
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: 192.168.1.151
    dns: 192.168.1.146
    volumes:
      - ./node/Socket-Server:/usr/app/src
  api:
    image: php-api:latest
    container_name: api
    ports:
      - '443:443'
      - '80:80'
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: 192.168.1.145
    dns: 192.168.1.146
    volumes:
      - ./php/api/:/var/www/html/api/
  gapi:
    image: php-gapi:latest
    container_name: gapi
    ports:
      - '443:443'
      - '80:80'
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: 192.168.1.147
    dns: 192.168.1.146
    volumes:
      - ./php/GAPI/:/var/www/html/gapi/
  rpg:
    image: php-rpg:latest
    container_name: rpg
    ports:
      - '443:443'
      - '80:80'
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: 192.168.1.148
    dns: 192.168.1.146
    volumes:
      - ./php/RPG-Site/:/var/www/html/rpg/
  site:
    image: php-site:latest
    container_name: site
    ports:
      - '443:443'
      - '80:80'
    restart: unless-stopped
    networks:
      homelab:
        ipv4_address: 192.168.1.149
    dns: 192.168.1.146
    volumes:
      - ./php/Website/:/var/www/html/site/
  runner:
    image: runner:latest
    container_name: runner
    ports:
      - '443:443'
      - '80:80'
    restart: always
    environment:
      GH_PAT: "${GH_PAT}"
      GITHUB_URL: "https://github.com/ItsLit-Media-and-Development"
      RUNNER_GROUP: "ContainerRunners"
      RUNNER_LABELS: "self-hosted,Linux,X64,docker"
    networks:
      homelab:
        ipv4_address: 192.168.1.152
    dns: 192.168.1.146
    volumes:
      - work:/home/runner/actions-runner/_work
      - /var/run/docker.sock:/var/run/docker.sock
  db:
    image: mysql:8.0
    container_name: db
    volumes:
      - mysqldata:/var/lib/mysql
      - ./mysql/init-sql:/docker-entrypoint-initdb.d/:ro
    ports:
      - "3306:3306"
    networks:
      homelab:
        ipv4_address: 192.168.1.144
    dns: 192.168.1.146
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      #MYSQL_DATABASE: "${MYSQL_DATABASE}"
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    network_mode: host
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
networks:
  homelab:
    driver: macvlan
    driver_opts:
      parent: enp1s0f0
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/20
          gateway: 192.168.1.254